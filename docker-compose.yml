version: "3.9"

services:
  db:
    image: "postgres"
    container_name: "postgres"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=myDB
    #restart: always
    ports:
      - "6767:5432"
    command: postgres
    expose:
      - 5432
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - backend

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: backend
    container_name: web-backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/myDB
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - db
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ./src:/usr/src/wellApp/src

    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend
    command:
      #debug on port 5005
      #java -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005 -Djava.security.edg=file:/dev/./urandom -jar /app.jar
      #no debugger
      java -Djava.security.edg=file:/dev/./urandom -jar /app.jar

  client:
    container_name: web-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://localhost:8080/api
    image: frontend
    env_file: ./frontend/.env
    ports:
      - '3000:3000'
    depends_on:
      - web
    networks:
      - frontend
      - backend
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - ./frontend/package.json:/usr/src/app/package.json


volumes:
  db_volume:
    external: true

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend: